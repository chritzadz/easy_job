[versions]
agp = "8.9.1"
androidEspressoCore = "3.0.2"
androidMapsUtils = "3.5.2"
androidxJunit = "1.1.3"
annotation = "1.9.1"
appcompatVersion = "1.6.1"
constraintlayoutVersion = "2.2.1"
core = "1.6.1"
coreKtx = "1.15.0"
espressoCoreVersion = "3.4.0"
firebaseBom = "33.12.0"
firebaseCrashlytics = "19.4.2"
firebaseCrashlyticsGradle = "3.0.3"
firebaseMessaging = "24.1.1"
googleAuthLibraryOauth2Http = "1.30.0"
googleMaterial = "1.11.0"
googleServices = "4.4.2"
gradle = "8.9.1"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.9.2"
constraintlayout = "2.1.4"
materialVersion = "1.4.0"
mockitoAndroid = "5.7.0"
mockitoCore = "5.7.0"
mockitoInline = "5.2.0"
mockitoKotlin = "5.1.0"
paypalAndroidSdk = "2.16.0"
playServicesAuth = "21.3.0"
playServicesLocation = "21.3.0"
playServicesMaps = "19.1.0"
powermockApiMockito2 = "1.7.0RC2"
powermockCore = "1.7.0RC2"
powermockModuleJunit4 = "1.7.0RC2"
rules = "1.6.1"
rulesVersion = "1.0.2"
uiautomator = "2.3.0"
googleGmsGoogleServices = "4.4.2"
firebaseDatabase = "21.0.0"
firebaseInappmessaging = "21.0.1"
espressoIntents = "3.6.1"
junitJupiter = "5.8.1"
transportationConsumer = "3.0.0"
volley = "1.2.1"

[libraries]
android-espresso-core = { module = "com.android.support.test.espresso:espresso-core", version.ref = "androidEspressoCore" }
android-maps-utils = { module = "com.google.maps.android:android-maps-utils", version.ref = "androidMapsUtils" }
annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
appcompat-v161 = { module = "androidx.appcompat:appcompat", version.ref = "appcompatVersion" }
constraintlayout-v221 = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayoutVersion" }
core = { module = "androidx.test:core", version.ref = "core" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
espresso-core-v340 = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCoreVersion" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics", version.ref = "firebaseCrashlytics" }
firebase-crashlytics-gradle = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsGradle" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging", version.ref = "firebaseMessaging" }
google-auth-library-oauth2-http = { module = "com.google.auth:google-auth-library-oauth2-http", version.ref = "googleAuthLibraryOauth2Http" }
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
junit-v113 = { module = "androidx.test.ext:junit", version.ref = "androidxJunit" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
material-v1110 = { module = "com.google.android.material:material", version.ref = "googleMaterial" }
material-v140 = { module = "com.google.android.material:material", version.ref = "materialVersion" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockitoAndroid" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockitoInline" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
paypal-android-sdk = { module = "com.paypal.sdk:paypal-android-sdk", version.ref = "paypalAndroidSdk" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
powermock-api-mockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermockApiMockito2" }
powermock-core = { module = "org.powermock:powermock-core", version.ref = "powermockCore" }
powermock-module-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermockModuleJunit4" }
rules = { module = "androidx.test:rules", version.ref = "rules" }
test-rules = { module = "com.android.support.test:rules", version.ref = "rulesVersion" }
uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiautomator" }
firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
firebase-inappmessaging = { group = "com.google.firebase", name = "firebase-inappmessaging", version.ref = "firebaseInappmessaging" }
espresso-intents = { group = "androidx.test.espresso", name = "espresso-intents", version.ref = "espressoIntents" }
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junitJupiter" }
transportation-consumer = { group = "com.google.android.libraries.mapsplatform.transportation", name = "transportation-consumer", version.ref = "transportationConsumer" }
volley = { module = "com.android.volley:volley", version.ref = "volley" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
google-gms-google-services = { id = "com.google.gms.google-services", version.ref = "googleGmsGoogleServices" }

